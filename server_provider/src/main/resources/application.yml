USER: dog
PASSWORD: 123456

server:
  port: 8001
  servlet:
    context-path: /provider

eureka:
  instance:
    appname: provider # 服务名，默认取 spring.application.name 配置值，如果没有则为 unknown
    instance-id: eureka-instance-provider-cli #实例ID
    hostname: 127.0.0.1 # 应用实例主机名
    prefer-ip-address: false # 客户端在注册时使用自己的IP而不是主机名，缺省：false
    ip-address: 127.0.0.1 # 应用实例IP
    lease-expiration-duration-in-seconds: 90 # 服务失效时间，失效的服务将被剔除。单位：秒，默认：90
    lease-renewal-interval-in-seconds: 60 # 服务续约（心跳）频率，单位：秒，缺省30
    status-page-url-path: /info # 状态页面的URL，相对路径，默认使用 HTTP 访问，如需使用 HTTPS则要使用绝对路径配置，缺省：/info
    health-check-url-path: /health # 健康检查页面的URL，相对路径，默认使用 HTTP 访问，如需使用 HTTPS则要使用绝对路径配置，缺省：/health

  client:
    service-url:
      defaultZone: http://${USER}:${PASSWORD}@${eureka.instance.hostname}:7001/eurekaserver/eureka/
    #register-with-eureka: true # 是否向注册中心注册自己，缺省：true 一般情况下，Eureka服务端是不需要再注册自己的
    #fetch-registry: false # 是否从Eureka获取注册信息，缺省：true 一般情况下，Eureka服务端是不需要的
    #registry-fetch-interval-seconds: 30 # 客户端拉取服务注册信息间隔，单位：秒，缺省：30
    #health-check.enabled: true
    #eureka-server-connect-timeout-seconds: 10 #连接Eureka服务器的超时时间，单位：秒，缺省：5
    #eureka-server-read-timeout-seconds: 20 # 从Eureka服务器读取信息的超时时间，单位：秒，缺省：8
    #filter-only-up-instances: true # 获取实例时是否只保留状态为 UP 的实例，缺省：true
    #eureka-connection-idle-timeout-seconds: 30 # Eureka服务端连接空闲时的关闭时间，单位：秒，缺省：30
    #eureka-server-total-connections: 200 # 从Eureka客户端到所有Eureka服务端的连接总数，缺省：200
    #eureka-server-total-connections-per-host: 50 # 从Eureka客户端到每个Eureka服务主机的连接总数，缺省：50

spring:
  application:
    name: ProviderServer